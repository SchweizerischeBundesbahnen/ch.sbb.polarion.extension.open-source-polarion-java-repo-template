---
name: Build & Release
on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
env:
  SETTINGS_XML: ${{ github.workspace }}/.mvn/settings.xml
  JAVA_VERSION: 17
  JAVA_DISTRIBUTION: temurin
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      checks: write
    outputs:
      project_version: ${{ steps.project_metadata.outputs.version }}
      artifact_id: ${{ steps.project_metadata.outputs.artifact_id }}
      group_id: ${{ steps.project_metadata.outputs.group_id }}
      is_release: ${{ steps.project_metadata.outputs.is_release }}
    env:
      IO_JFROG_SBB_POLARION_TOKEN: ${{ secrets.IO_JFROG_SBB_POLARION_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      MARKDOWN2HTML_MAVEN_PLUGIN_FAIL_ON_ERROR: true
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PASSPHRASE: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PASSPHRASE }}
    steps:
      - name: üìÑ Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0  # Sonar needs full history
          persist-credentials: false
      - name: üß± Set up JDK and Maven
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00  # v4.7.1
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
          gpg-private-key: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PRIVATE_KEY }}
      - name: üìù Extract project metadata
        id: project_metadata
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          GROUP_ID=$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout)
          # Check if it is a release
          if [[ ! "${VERSION}" =~ -SNAPSHOT$ ]]; then
            IS_RELEASE=true
          else
            IS_RELEASE=false
          fi
          {
            echo "version=${VERSION}"
            echo "artifact_id=${ARTIFACT_ID}"
            echo "group_id=${GROUP_ID}"
            echo "is_release=${IS_RELEASE}"
          } >> "$GITHUB_OUTPUT"
      - name: üîç Cache SonarQube packages
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: üì¶ Build with Maven for Pushes
        if: github.event_name == 'push'
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
        run: |
          if [ -n "${GITHUB_HEAD_REF}" ]; then
            mvn --batch-mode -s "${SETTINGS_XML}" clean verify -P gpg-sign sonar:sonar -Dsonar.branch.name="${GITHUB_HEAD_REF}"
          else
            mvn --batch-mode -s "${SETTINGS_XML}" clean verify -P gpg-sign sonar:sonar
          fi
      - name: üì¶ Build with Maven for PRs
        if: github.event_name == 'pull_request'
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_PR_NUMBER_REF: ${{ github.event.pull_request.number }}
        run: mvn --batch-mode -s "${SETTINGS_XML}" clean verify -P gpg-sign sonar:sonar -Dsonar.pullrequest.base="${GITHUB_BASE_REF}" -Dsonar.pullrequest.branch="${GITHUB_HEAD_REF}"
          -Dsonar.pullrequest.key="${GITHUB_PR_NUMBER_REF}"
      - name: üìã Analyze dependencies
        if: github.event_name == 'pull_request'
        run: mvn --batch-mode dependency:analyze
        continue-on-error: true
#      - name: üìä Publish Test Results
#        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6  # v2.20.0
#        if: always()
#        with:
#          files: |
#            target/surefire-reports/*.xml
#            target/failsafe-reports/*.xml
#          check_name: Test Results
#          comment_mode: false
#      - name: üìà Upload coverage to Codecov
#        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24  # v5.4.3
#        if: always()
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: target/site/jacoco/jacoco.xml
#          fail_ci_if_error: false
      - name: üì¶ Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: maven-artifacts
          path: |
            target/*.jar
            target/*.pom
            target/*.asc
          retention-days: 1
          if-no-files-found: error
  deploy-maven-central:
    needs: build
    if: ${{ needs.build.outputs.is_release == 'true' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      PROJECT_VERSION: ${{ needs.build.outputs.project_version }}
      ARTIFACT_ID: ${{ needs.build.outputs.artifact_id }}
      GROUP_ID: ${{ needs.build.outputs.group_id }}
    steps:
      - name: üìÑ Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: üì• Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4.3.0
        with:
          name: maven-artifacts
          path: target/
      - name: üß± Set up JDK and Maven
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00  # v4.7.1
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
      - name: üì¶ Deploy to Maven Central
        run: |
          # Deploy main JAR
          mvn --batch-mode -s "${SETTINGS_XML}" deploy:deploy-file \
            -Dfile="target/${ARTIFACT_ID}-${PROJECT_VERSION}.jar" \
            -DpomFile="target/${ARTIFACT_ID}-${PROJECT_VERSION}.pom" \
            -Durl="https://central.sonatype.com/api/v1/publisher/upload" \
            -DrepositoryId="sonatype-central" \
            -P central-publishing \
            -Dcentral-publishing-maven-plugin.autoPublish=false

          # Deploy sources JAR
          mvn --batch-mode -s "${SETTINGS_XML}" deploy:deploy-file \
            -Dfile="target/${ARTIFACT_ID}-${PROJECT_VERSION}-sources.jar" \
            -DpomFile="target/${ARTIFACT_ID}-${PROJECT_VERSION}.pom" \
            -Dclassifier=sources \
            -Durl="https://central.sonatype.com/api/v1/publisher/upload" \
            -DrepositoryId="sonatype-central" \
            -P central-publishing \
            -Dcentral-publishing-maven-plugin.autoPublish=false

          # Deploy javadoc JAR
          mvn --batch-mode -s "${SETTINGS_XML}" deploy:deploy-file \
            -Dfile="target/${ARTIFACT_ID}-${PROJECT_VERSION}-javadoc.jar" \
            -DpomFile="target/${ARTIFACT_ID}-${PROJECT_VERSION}.pom" \
            -Dclassifier=javadoc \
            -Durl="https://central.sonatype.com/api/v1/publisher/upload" \
            -DrepositoryId="sonatype-central" \
            -P central-publishing \
            -Dcentral-publishing-maven-plugin.autoPublish=false
  deploy-github-packages:
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      PROJECT_VERSION: ${{ needs.build.outputs.project_version }}
      ARTIFACT_ID: ${{ needs.build.outputs.artifact_id }}
      GROUP_ID: ${{ needs.build.outputs.group_id }}
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_REPO_NAME: ${{ github.repository }}
    steps:
      - name: üìÑ Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 1
          persist-credentials: false
      - name: üì• Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093  # v4.3.0
        with:
          name: maven-artifacts
          path: target/
      - name: üß± Set up JDK and Maven
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00  # v4.7.1
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
      - name: üì¶ Deploy to GitHub Packages
        run: |
          # Deploy main JAR
          mvn deploy:deploy-file \
            -Dfile="target/${ARTIFACT_ID}-${PROJECT_VERSION}.jar" \
            -DpomFile="target/${ARTIFACT_ID}-${PROJECT_VERSION}.pom" \
            -Durl="https://maven.pkg.github.com/${GITHUB_REPO_NAME}" \
            -DrepositoryId="github" \
            -s "${SETTINGS_XML}"
      - name: üì¶ Upload assets to GitHub Release
        if: ${{ needs.build.outputs.is_release == 'true' }}
        run: |-
          gh release upload "v${PROJECT_VERSION}" "target/*-${PROJECT_VERSION}.jar" --clobber

  # Security scanning job that runs in parallel
#  security-scan:
#    runs-on: ubuntu-latest
#    permissions:
#      security-events: write
#    steps:
#      - name: üìÑ Checkout code
#        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
#        with:
#          persist-credentials: false
#      - name: üß± Setup JDK
#        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00  # v4.7.1
#        with:
#          distribution: ${{ env.JAVA_DISTRIBUTION }}
#          java-version: ${{ env.JAVA_VERSION }}
#          cache: maven
#      - name: üîç Cache OWASP Dependency Check database
#        uses: actions/cache@v4.2.3
#        with:
#          path: ~/.owasp/dependency-check-data
#          key: ${{ runner.os }}-owasp-db-${{ hashFiles('dependency-check-maven/**/pom.xml', '**/dependency-check.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-owasp-db-
#      - name: üîê Run OWASP Dependency Check
#        run: |
#          mvn --batch-mode -s "${SETTINGS_XML}" \
#            org.owasp:dependency-check-maven:check \
#            -Dformat=sarif \
#            -DfailBuildOnCVSS=7
#        continue-on-error: true
#      - name: üì§ Upload SARIF results
#        uses: github/codeql-action/upload-sarif@v3.29.1
#        if: always()
#        with:
#          sarif_file: target/dependency-check-report.sarif
